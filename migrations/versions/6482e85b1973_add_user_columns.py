"""ADD_USER_COLUMNS

Revision ID: 6482e85b1973
Revises: 3ae3e7cbfd0e
Create Date: 2023-07-19 22:04:07.651775

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "6482e85b1973"
down_revision = "3ae3e7cbfd0e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("username", sa.String(length=50), nullable=False))
    op.add_column("users", sa.Column("email", sa.String(length=50), nullable=False))
    op.add_column("users", sa.Column("password", sa.String(length=255), nullable=False))
    op.add_column("users", sa.Column("is_superuser", sa.Boolean(), nullable=False))
    op.add_column("users", sa.Column("is_admin", sa.Boolean(), nullable=False))
    op.add_column("users", sa.Column("is_active", sa.Boolean(), nullable=False))
    op.add_column("users", sa.Column("created_at", sa.DateTime(), nullable=False))
    op.add_column("users", sa.Column("last_login", sa.DateTime(), nullable=True))
    op.create_unique_constraint(None, "users", ["email"])
    op.create_unique_constraint(None, "users", ["username"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users", type_="unique")
    op.drop_constraint(None, "users", type_="unique")
    op.drop_column("users", "last_login")
    op.drop_column("users", "created_at")
    op.drop_column("users", "is_active")
    op.drop_column("users", "is_admin")
    op.drop_column("users", "is_superuser")
    op.drop_column("users", "password")
    op.drop_column("users", "email")
    op.drop_column("users", "username")
    # ### end Alembic commands ###
